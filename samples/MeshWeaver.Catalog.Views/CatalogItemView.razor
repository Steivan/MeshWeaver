@using System.Reflection
@inherits BlazorView<CatalogItemControl, CatalogItemView>

<article>
    <div class="details">
        <div class="title">
            <a href="">
                <h3>@Data.Title</h3>
            </a>
        </div>
        <p class="summary">
            @Data.Description
        </p>
        <div class="footer">
            <FluentLabel>@Created</FluentLabel>

            <FluentPersona Name="@Data.Author"
                           Image="@Avatar"
                           ImageSize="24px"/>

            <FluentLabel>
                <FluentIcon Value="@(new Icons.Regular.Size20.Eye())"/>
                @Data.Views
            </FluentLabel>

            <FluentLabel>
                <FluentIcon Value="@(new Icons.Regular.Size20.ThumbLike())"/>
                @Data.Likes
            </FluentLabel>

            <div class="tags">
                @foreach (var tag in Data.Tags)
                {
                    <FluentBadge>@tag</FluentBadge>
                }
            </div>
        </div>
    </div>
    <div class="thumbnail">
        <img 
            alt="@Data.Title" 
            src="@Thumbnail" 
            width="160"
            height="100"
        />
    </div>
</article>

@code
{
    private CatalogItemData Data { get; set; }

    private readonly string imageBasePath = $"_content/{Assembly.GetExecutingAssembly().GetName().Name}";

    private string Avatar => $"{imageBasePath}/avatars/{Data.Avatar}";
    private string Thumbnail => $"{imageBasePath}/images/{Data.Thumbnail}";

    private string Created => Data.Created.ToShortDateString();

    protected override void BindData()
    {
        base.BindData();

        if (ViewModel != null)
        {
            DataBind(ViewModel.Data, x => x.Data);
        }
    }
}