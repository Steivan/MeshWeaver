@using HorizontalAlignment = Microsoft.FluentUI.AspNetCore.Components.HorizontalAlignment
@using Typography = Microsoft.FluentUI.AspNetCore.Components.Typography
@using FontWeight = Microsoft.FluentUI.AspNetCore.Components.FontWeight
@inherits BlazorView<LabelControl, Label>

<FluentLabel
    Alignment="@Alignment"
    Disabled="@Disabled"
    Typo="@Typo"
    Weight="@Weight">
    @InternalData
</FluentLabel>

@code
{
    private string InternalData { get; set; }
    private HorizontalAlignment Alignment { get; set; }
    private bool Disabled { get; set; }
    private Typography Typo { get; set; }
    private FontWeight Weight { get; set; }

    protected override void BindData()
    {
        base.BindData();
        DataBindProperty(ViewModel.Data, x => x.InternalData );
        DataBind<Layout.HorizontalAlignment>(ViewModel.Alignment, x =>
        {
            Alignment = x.ToFluentHorizontalAlignment();
            return true;
        });
        DataBindProperty<bool>(ViewModel.Disabled, x => x.Disabled);
        DataBind<Layout.Typography>(ViewModel.Typo, x =>
        {
            Typo = x.ToFluentTypography();
            return true;
        });
        DataBind<Layout.FontWeight>(ViewModel.Weight, x =>
        {
            Weight = x.ToFluentFontWeight();
            return true;
        });
    }
}
