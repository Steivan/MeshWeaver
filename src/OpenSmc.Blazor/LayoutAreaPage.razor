@page "/app/{Application}/{Environment}/{Area}/{Id?}"
@using System.Collections.Immutable
@using System.Reactive.Subjects
@using Microsoft.Extensions.DependencyInjection
@using OpenSmc.Application
@using OpenSmc.Messaging
@using OpenSmc.Utils

@inject IMessageHub Hub

<PageTitle>@PageTitle</PageTitle>

<LayoutArea Address="@Address" Reference="@Reference" Id="@Id"/>

@code{
    [Parameter]
    public string Application { get; set; }
    [Parameter]
    public string Environment { get; set; }
    [Parameter]
    public string Area { get; set; }
    [Parameter] 
    public string Id { get; set; }

    private string PageTitle => $"{Area.Wordify()} - {Application}";
    [Parameter(CaptureUnmatchedValues = true)] public IReadOnlyDictionary<string, object> Options { get; set; }
    private object Address => new ApplicationAddress(Application, Environment);

    private LayoutAreaReference Reference => new(Area)
    {
        Options = Options?.ToImmutableDictionary() 
                  ?? ImmutableDictionary<string, object>.Empty,
    };

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        var state = Hub.ServiceProvider.GetRequiredService<ReplaySubject<LayoutAreaPageState>>();
        state.OnNext(new(Address, Reference));
    }

}