@using Json.More
@using Json.Patch
@using Json.Pointer
@using System.Text.Json
@using System.Text.Json.Nodes
@inherits BlazorView<SelectControl>

<FluentSelect Label="@ViewModel.Label.ToString()"
              Items="@Items"
              OptionText="@GetOptionText"
              SelectedOption="@Data"
              @onchange="ChangeData"
/>

@code
{
    private IEnumerable<object> Items => ViewModel.Elements.Cast<object>();

    public string GetOptionText(object item) => 
        JsonPointer.Parse(ViewModel.OptionText)
            .Evaluate(item.ToJsonDocument().RootElement)?.GetString();

    private void ChangeData(object data)
    {
        if (ViewModel.Data is JsonPointerReference pointerRef)
        {
            Stream.Update(ci => new Data.Serialization.ChangeItem<JsonElement>(
                Stream.Id,
                Stream.Reference,
                new JsonPatch(
                    PatchOperation.Replace(JsonPointer.Parse(pointerRef.Pointer),
                        JsonValue.Create(data)))
                    .Apply(ci),
                Stream.Hub.Address,
                Stream.Hub.Version
                ));
        }
    }

    public object Data { get; set; }

    protected override void OnInitialized()
    {
        DataBind<object>(ViewModel.Data, 
            data => Data = data);
    }
}