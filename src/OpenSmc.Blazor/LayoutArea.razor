@using OpenSmc.Layout.Composition
@using HorizontalAlignment = Microsoft.FluentUI.AspNetCore.Components.HorizontalAlignment
@using Orientation = Microsoft.FluentUI.AspNetCore.Components.Orientation
@using VerticalAlignment = Microsoft.FluentUI.AspNetCore.Components.VerticalAlignment
@if (RootControl == null)
{
    <FluentStack HorizontalAlignment="HorizontalAlignment.Center" VerticalAlignment="VerticalAlignment.Center" Orientation="Orientation.Vertical">
        <h3>Loading @Reference.Area</h3>
        <FluentProgressRing style="width: 102px; height: 102px;"/>
    </FluentStack>
}
else
{
    @if (CodeReference == null)
    {
        <div class="layout-area">
            <DispatchView ViewModel="@RootControl" Stream="@Stream" Area="@Reference.Area"/>
        </div>
        @if (RootControl.Sources.Any())
        {
            <div class="source-downloads">
                <FluentSpacer />
                <div style="display: flex; align-items: center;">
                    @foreach (var source in RootControl.Sources)
                    {
                        <FluentMenuItem Style="min-width: 85px; text-overflow: ellipsis" OnClick="@(e => @Select(source))" Appearance="Appearance.Neutral">
                            @source
                        </FluentMenuItem>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="layout-area">
            <LayoutArea Address="@Address" @Reference="@CodeReference"/>
        </div>
        <div class="source-downloads">
            <FluentSpacer />
            <FluentMenuItem OnClick="@(_ => Unselect())" Appearance="Appearance.Neutral">
                Back
            </FluentMenuItem>
        </div>
    }
}

@code{

    private LayoutAreaReference CodeReference { get; set; }
    private void Select(SourceItem source)
    {
        CodeReference = new(ApplicationViews.Source) { Id = source };
    }


    private void Unselect()
    {
        CodeReference = null;
    }

}
