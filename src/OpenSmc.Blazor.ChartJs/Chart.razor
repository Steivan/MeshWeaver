@using Microsoft.JSInterop
@inherits BlazorView<OpenSmc.Charting.ChartControl>
@implements IAsyncDisposable

<div @ref="element" className="chart-container">
    <canvas></canvas>
</div>

@code
{
    ElementReference element;

    [Inject] private IJSRuntime JsRuntime { get; set; }
    private IJSObjectReference jsModule;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (firstRender)
        {
            jsModule = await JsRuntime.InvokeAsync<IJSObjectReference>(
                        "import",
                        "./_content/OpenSmc.Blazor.ChartJs/index.mjs"
                    );

            DataBind<object>(ViewModel.Data, o => Options = o);
        }

        if (jsModule is not null)
        {
            await jsModule.InvokeVoidAsync("renderChart", Id, element, Options);
        }
    }

    private string Id => Guid.NewGuid().ToString();

    private object Options { get; set; }

    public async ValueTask DisposeAsync()
    {
        if (jsModule is not null)
        {
            try
            {
                await jsModule.InvokeVoidAsync("destroyChart", Id);
                await jsModule.DisposeAsync();
            }
            catch (JSDisconnectedException)
            {
            }
        }
    }
}